//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace POC_Presentation_MVC.ProductServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceReference.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/findAll", ReplyAction="http://tempuri.org/IProductService/findAllResponse")]
        POC_Common.ProductDTO[] findAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/findAll", ReplyAction="http://tempuri.org/IProductService/findAllResponse")]
        System.Threading.Tasks.Task<POC_Common.ProductDTO[]> findAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/findAllPaged", ReplyAction="http://tempuri.org/IProductService/findAllPagedResponse")]
        POC_Common.ContainerDTO<POC_Common.ProductDTO> findAllPaged(int start, int length);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/findAllPaged", ReplyAction="http://tempuri.org/IProductService/findAllPagedResponse")]
        System.Threading.Tasks.Task<POC_Common.ContainerDTO<POC_Common.ProductDTO>> findAllPagedAsync(int start, int length);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/findById", ReplyAction="http://tempuri.org/IProductService/findByIdResponse")]
        POC_Common.ProductDTO findById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/findById", ReplyAction="http://tempuri.org/IProductService/findByIdResponse")]
        System.Threading.Tasks.Task<POC_Common.ProductDTO> findByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/findByCreationDate", ReplyAction="http://tempuri.org/IProductService/findByCreationDateResponse")]
        POC_Common.ProductDTO[] findByCreationDate(System.DateTime creationDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/findByCreationDate", ReplyAction="http://tempuri.org/IProductService/findByCreationDateResponse")]
        System.Threading.Tasks.Task<POC_Common.ProductDTO[]> findByCreationDateAsync(System.DateTime creationDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/create", ReplyAction="http://tempuri.org/IProductService/createResponse")]
        bool create(POC_Common.ProductDTO product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/create", ReplyAction="http://tempuri.org/IProductService/createResponse")]
        System.Threading.Tasks.Task<bool> createAsync(POC_Common.ProductDTO product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/update", ReplyAction="http://tempuri.org/IProductService/updateResponse")]
        bool update(POC_Common.ProductDTO product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/update", ReplyAction="http://tempuri.org/IProductService/updateResponse")]
        System.Threading.Tasks.Task<bool> updateAsync(POC_Common.ProductDTO product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/delete", ReplyAction="http://tempuri.org/IProductService/deleteResponse")]
        bool delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/delete", ReplyAction="http://tempuri.org/IProductService/deleteResponse")]
        System.Threading.Tasks.Task<bool> deleteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : POC_Presentation_MVC.ProductServiceReference.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<POC_Presentation_MVC.ProductServiceReference.IProductService>, POC_Presentation_MVC.ProductServiceReference.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public POC_Common.ProductDTO[] findAll() {
            return base.Channel.findAll();
        }
        
        public System.Threading.Tasks.Task<POC_Common.ProductDTO[]> findAllAsync() {
            return base.Channel.findAllAsync();
        }
        
        public POC_Common.ContainerDTO<POC_Common.ProductDTO> findAllPaged(int start, int length) {
            return base.Channel.findAllPaged(start, length);
        }
        
        public System.Threading.Tasks.Task<POC_Common.ContainerDTO<POC_Common.ProductDTO>> findAllPagedAsync(int start, int length) {
            return base.Channel.findAllPagedAsync(start, length);
        }
        
        public POC_Common.ProductDTO findById(int id) {
            return base.Channel.findById(id);
        }
        
        public System.Threading.Tasks.Task<POC_Common.ProductDTO> findByIdAsync(int id) {
            return base.Channel.findByIdAsync(id);
        }
        
        public POC_Common.ProductDTO[] findByCreationDate(System.DateTime creationDate) {
            return base.Channel.findByCreationDate(creationDate);
        }
        
        public System.Threading.Tasks.Task<POC_Common.ProductDTO[]> findByCreationDateAsync(System.DateTime creationDate) {
            return base.Channel.findByCreationDateAsync(creationDate);
        }
        
        public bool create(POC_Common.ProductDTO product) {
            return base.Channel.create(product);
        }
        
        public System.Threading.Tasks.Task<bool> createAsync(POC_Common.ProductDTO product) {
            return base.Channel.createAsync(product);
        }
        
        public bool update(POC_Common.ProductDTO product) {
            return base.Channel.update(product);
        }
        
        public System.Threading.Tasks.Task<bool> updateAsync(POC_Common.ProductDTO product) {
            return base.Channel.updateAsync(product);
        }
        
        public bool delete(int id) {
            return base.Channel.delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> deleteAsync(int id) {
            return base.Channel.deleteAsync(id);
        }
    }
}
